name: Run Python Script every 20 minutes

on:
  schedule:
    # 每 20 分鐘執行一次
    - cron: '*/20 * * * *'
  # 允許你手動執行此 workflow
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步驟一：取得你的 repository 程式碼
      - name: Check out repository code
        uses: actions/checkout@v4

      # 步驟二：設定 Python 環境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # 你可以指定需要的 Python 版本

      # (可選) 步驟三：安裝腳本需要的套件
      # 如果你的 Python 腳本有用到像 requests, beautifulsoup4 等等的套件，
      # 請先建立一個 requirements.txt 檔案，把套件名稱寫進去。
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 步驟四：執行你的 Python 腳本
      - name: Run Python script
        run: python news-data/google_news_hotword_provider.py
        working-directory: ./ # 確保從 repository 根目錄開始

      # (可選) 步驟五：Commit 並 Push 變更
      # 如果你的腳本會產生新的檔案或修改現有檔案 (例如產生新的資料檔)，
      # 你需要將這些變更 commit 並 push 回你的 repository。
      - name: Commit and push if it changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update news data"; git push)
